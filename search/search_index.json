{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Daily Devloping Guide \u00b6 This is a guide site for daily developing. index \u00b6 Home Language Python SQL Unix Commands & Bash Server Nginx Supervisor Mkdocs Django Airflow","title":"Home"},{"location":"#daily-devloping-guide","text":"This is a guide site for daily developing.","title":"Daily Devloping Guide"},{"location":"#index","text":"Home Language Python SQL Unix Commands & Bash Server Nginx Supervisor Mkdocs Django Airflow","title":"index"},{"location":"about/","text":"Zonam amantes excusat aliisque loqui totoque \u00b6 At levat meque magni non Iove crimine \u00b6 Lorem markdownum parentem vident sed esse pressam. Discedere rogantis recedere; mihi odissem, et status trahit Saturnia caelo votis reges talisque, crura? Manus vacuo violentaque laudis quem vel atque formam. Et clipeum corpora. var code_dvi = cybersquatter_ring_terminal; var dhcpDnsDigital = impact_matrix; if (impactNat + 2 <= kilohertzMiniSdram + runtime) { dbms.realJreMamp(cd_symbolic_boot); wimaxSystrayBlu.isp_drive_nic(5, 97, viral); process = www_plagiarism; } else { primaryBox(png, loadSerpLossless, and_tablet_deprecated(point, -5, delThreadSmtp)); panel += worm; memory(soft_switch_shortcut.panel_address_big(icq, 4, controllerLeft), formatGopher.language.menuDrop(networkUnmountManet, volume_user, view_floating)); } Esset sedet tenetur \u00b6 Quantusque posita misit totoque quaeque, nunc edere o feris mea properent ut tamen ! Contulerant hunc; cecidere libertas. Quoque et utero additur coniunx \u00b6 Crimen sonantes certo patrium inexorabile nisi Troas, Tegeaea et nempe, spectantis. Pedes finierat laudatis et conubia publica oris perspicit potestis prope. Nec terris \u00b6 Sibi eburno adspexit duplex: exigite candor effecisse? Colli molliaque piacula posse exclamat orbis indignatur dei velocibus, qui habuit pervia. Cortice navigat illo probabit. if (mouse_association_card + drive * tiff) { menuTrackball = -5; promptTrinitron = ip_oop; file = onlinePostFile(botnetMinicomputerError, 4, baud_hexadecimal_install) + mbr; } else { mips.gps = icq + 3; } engine = workstationSaas.document(codecFileClob * ipPinterestMountain + syntaxKeyApp, sd * cpa_formula); hoverUp.dot_portal_spoofing += interlacedDocking(host_parallel(us - ppl, superscalar_scroll_mask, 12)); Vara durasse \u00b6 Ades conata ubi procumbit protinus Priamoque quippe pectora veteris : herbas rustica, tuum et. Factus vetuit, est vindice vescitur. Habet despectabat velamine, gelidos dederatque dederat. In cava, de exspirat superamur omnia, sulcum sequentis luctatur : pete aptabat muneris arreptamque remige adspicit. Negarem ab non illos adsiduis: et dominum laedam, si illud amissam discite Nereia fraterno et opus adiuvat percurrere. Gravatum dedisset factisque rostrum caput. Coniugis e placet nescis; ora pariter nomen est dolor, casu. Cibos opesque plura aut est currum mutua vindicet gradus virum, capillis famamque erat: equidem. Satis in Clytumque pedem qui quaecumque, consternatique canities Italiae concidit caelum primum duro viderat vixque!","title":"Zonam amantes excusat aliisque loqui totoque"},{"location":"about/#zonam-amantes-excusat-aliisque-loqui-totoque","text":"","title":"Zonam amantes excusat aliisque loqui totoque"},{"location":"about/#at-levat-meque-magni-non-iove-crimine","text":"Lorem markdownum parentem vident sed esse pressam. Discedere rogantis recedere; mihi odissem, et status trahit Saturnia caelo votis reges talisque, crura? Manus vacuo violentaque laudis quem vel atque formam. Et clipeum corpora. var code_dvi = cybersquatter_ring_terminal; var dhcpDnsDigital = impact_matrix; if (impactNat + 2 <= kilohertzMiniSdram + runtime) { dbms.realJreMamp(cd_symbolic_boot); wimaxSystrayBlu.isp_drive_nic(5, 97, viral); process = www_plagiarism; } else { primaryBox(png, loadSerpLossless, and_tablet_deprecated(point, -5, delThreadSmtp)); panel += worm; memory(soft_switch_shortcut.panel_address_big(icq, 4, controllerLeft), formatGopher.language.menuDrop(networkUnmountManet, volume_user, view_floating)); }","title":"At levat meque magni non Iove crimine"},{"location":"about/#esset-sedet-tenetur","text":"Quantusque posita misit totoque quaeque, nunc edere o feris mea properent ut tamen ! Contulerant hunc; cecidere libertas.","title":"Esset sedet tenetur"},{"location":"about/#quoque-et-utero-additur-coniunx","text":"Crimen sonantes certo patrium inexorabile nisi Troas, Tegeaea et nempe, spectantis. Pedes finierat laudatis et conubia publica oris perspicit potestis prope.","title":"Quoque et utero additur coniunx"},{"location":"about/#nec-terris","text":"Sibi eburno adspexit duplex: exigite candor effecisse? Colli molliaque piacula posse exclamat orbis indignatur dei velocibus, qui habuit pervia. Cortice navigat illo probabit. if (mouse_association_card + drive * tiff) { menuTrackball = -5; promptTrinitron = ip_oop; file = onlinePostFile(botnetMinicomputerError, 4, baud_hexadecimal_install) + mbr; } else { mips.gps = icq + 3; } engine = workstationSaas.document(codecFileClob * ipPinterestMountain + syntaxKeyApp, sd * cpa_formula); hoverUp.dot_portal_spoofing += interlacedDocking(host_parallel(us - ppl, superscalar_scroll_mask, 12));","title":"Nec terris"},{"location":"about/#vara-durasse","text":"Ades conata ubi procumbit protinus Priamoque quippe pectora veteris : herbas rustica, tuum et. Factus vetuit, est vindice vescitur. Habet despectabat velamine, gelidos dederatque dederat. In cava, de exspirat superamur omnia, sulcum sequentis luctatur : pete aptabat muneris arreptamque remige adspicit. Negarem ab non illos adsiduis: et dominum laedam, si illud amissam discite Nereia fraterno et opus adiuvat percurrere. Gravatum dedisset factisque rostrum caput. Coniugis e placet nescis; ora pariter nomen est dolor, casu. Cibos opesque plura aut est currum mutua vindicet gradus virum, capillis famamque erat: equidem. Satis in Clytumque pedem qui quaecumque, consternatique canities Italiae concidit caelum primum duro viderat vixque!","title":"Vara durasse"},{"location":"detail/","text":"Detail \u00b6","title":"Detail"},{"location":"detail/#detail","text":"","title":"Detail"},{"location":"data/chart/","text":"Chart \u00b6 Scatter Chart tops = report1 [: 100 ] xlabel = \"xLabel\" ylabel = \"yLabel\" x = tops [ xlabel ] y = tops [ ylabel ] s = tops [ 'index' ] texts = tops . index fig , ax = plt . subplots ( figsize = ( 40 , 20 )) ax . scatter ( x , y , s = s ) plt . xlabel ( xlabel ) plt . ylabel ( ylabel ) exists = [] for i , txt in enumerate ( texts ): loc = ( x [ i ], y [ i ]) ax . annotate ( txt , loc ) exists . append ( loc ) Display utf-8 character in matplorlib chart from matplotlib.font_manager import FontProperties from matplotlib import pyplot as plt font = FontProperties ( fname = \"c:/windows/fonts/simsun.ttc\" , size = 14 ) plt . title ( \"\u767e\u5206\u4f4d\u56fe\" , fontproperties = font ) plt . xticks ( fontproperties = font ) Display utf-8 character in Graphviz chart 1. Set fonts.conf in Graphviz. 2. Change souce format as gbk in python graphviz. 3. Add `node[fontname = \"PMingLiu\"];` in dot file.","title":"Chart"},{"location":"data/chart/#chart","text":"Scatter Chart tops = report1 [: 100 ] xlabel = \"xLabel\" ylabel = \"yLabel\" x = tops [ xlabel ] y = tops [ ylabel ] s = tops [ 'index' ] texts = tops . index fig , ax = plt . subplots ( figsize = ( 40 , 20 )) ax . scatter ( x , y , s = s ) plt . xlabel ( xlabel ) plt . ylabel ( ylabel ) exists = [] for i , txt in enumerate ( texts ): loc = ( x [ i ], y [ i ]) ax . annotate ( txt , loc ) exists . append ( loc ) Display utf-8 character in matplorlib chart from matplotlib.font_manager import FontProperties from matplotlib import pyplot as plt font = FontProperties ( fname = \"c:/windows/fonts/simsun.ttc\" , size = 14 ) plt . title ( \"\u767e\u5206\u4f4d\u56fe\" , fontproperties = font ) plt . xticks ( fontproperties = font ) Display utf-8 character in Graphviz chart 1. Set fonts.conf in Graphviz. 2. Change souce format as gbk in python graphviz. 3. Add `node[fontname = \"PMingLiu\"];` in dot file.","title":"Chart"},{"location":"data/dataProcessing/","text":"Data processing \u00b6 The goal \u00b6 Convert the data close to nature, and make more convenient for human and computer to understand the data. Common method \u00b6 Data cleaning: process the missing value and wrong data Data integration: intergate data from multiple sources. Data reduction: vector reduction and value reduction Data transformation: standardization, log transformation, discretization Data mixing: reduce the problem caused by data order Specific method \u00b6 Use log transformation to process nonlinear data \u00b6 In addition, there are power transformation, negative transformation and root transformation, all of which are data transformations. Log transformation is useful to conver many data multiply to add, which avoid influence of value close to 0. And it is convenient to calculate. If you need make 2 and 0.5 has a equal range from 1, using natural logarithm \"e\" will get a result of 0.69 and -0.69. Avoid predicting past target variables with future feature variables in time series data. \u00b6 Discretization for multimodal distribution variable \u00b6 Principal Component Analysis \u00b6 \u00b6 Ptyhon sklearn processing library: preprocessing \u00b6 Referral \u00b6 [Data Mining Concepts and Techiques]","title":"Data processing"},{"location":"data/dataProcessing/#data-processing","text":"","title":"Data processing"},{"location":"data/dataProcessing/#the-goal","text":"Convert the data close to nature, and make more convenient for human and computer to understand the data.","title":"The goal"},{"location":"data/dataProcessing/#common-method","text":"Data cleaning: process the missing value and wrong data Data integration: intergate data from multiple sources. Data reduction: vector reduction and value reduction Data transformation: standardization, log transformation, discretization Data mixing: reduce the problem caused by data order","title":"Common method"},{"location":"data/dataProcessing/#specific-method","text":"","title":"Specific method"},{"location":"data/dataProcessing/#use-log-transformation-to-process-nonlinear-data","text":"In addition, there are power transformation, negative transformation and root transformation, all of which are data transformations. Log transformation is useful to conver many data multiply to add, which avoid influence of value close to 0. And it is convenient to calculate. If you need make 2 and 0.5 has a equal range from 1, using natural logarithm \"e\" will get a result of 0.69 and -0.69.","title":"Use log transformation to process nonlinear data"},{"location":"data/dataProcessing/#avoid-predicting-past-target-variables-with-future-feature-variables-in-time-series-data","text":"","title":"Avoid predicting past target variables with future feature variables  in time series data."},{"location":"data/dataProcessing/#discretization-for-multimodal-distribution-variable","text":"","title":"Discretization for multimodal distribution variable"},{"location":"data/dataProcessing/#principal-component-analysis","text":"","title":"Principal Component Analysis"},{"location":"data/dataProcessing/#ptyhon-sklearn-processing-library-preprocessing","text":"","title":"Ptyhon sklearn processing library: preprocessing"},{"location":"data/dataProcessing/#referral","text":"[Data Mining Concepts and Techiques]","title":"Referral"},{"location":"language/python/","text":"Python \u00b6 Install \u00b6 Centos \u00b6 https://janikarhunen.fi/how-to-install-python-3-6-1-on-centos-7 Ubuntu \u00b6 Use ppa (Personal Package Archive) sudo add-apt-repository ppa:deadsnakes/ppa sudo apt-get update sudo apt-get install python3.6 Install the necessary libraries \u00b6 pip: https://pip.pypa.io/en/stable/installing/ Virtualenv: pip install virtualenv Admin \u00b6 Package install \u00b6 Pip from image source(Tempoary setting) pip install -I https://pypi.douban.com/simple/ Pip from image source(Persistence setting): edit $HOME/.pip/pip.conf(Unix) or %HOME%\\pip\\pip.ini(Windows) add [global] timeout = 6000 index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com Virtualenv \u00b6 Create virtualenv with specified version virtualenv env -p /usr/bin/python3.7 Path \u00b6 Alias python name alias python=python3.7 This command can't run use sudo , because it is a user level command. Code Sample \u00b6 Get current script location scriptLocation = os . path . dirname ( os . path . realpath ( __file__ )) Get current local datetime time_str = time . strftime ( '%Y-%m- %d %H%m%S' , time . localtime ()) Export xlsx without url format with pd . ExcelWriter ( filepath , engine = 'xlsxwriter' , options = { 'strings_to_urls' : False }) as writer : df . to_excel ( writer , index = False ) Save excel-readabel csv with utf-8 resultFilepath = \"result.csv\" with open ( resultFilepath , mode = \"w\" , encoding = \"utf-8\" ) as f : f . write ( ' \\ufeff ' ) result . to_csv ( f , index = False , line_terminator = ' \\n ' ) Sort by a list [ x for _ , x in sorted ( zip ( Y , X ))] Quickly understand the information redundancy of pandas dataframe { x : df [ x ] . duplicated () . sum () / df . shape [ 0 ] for x in df . columns } Vertical Cmobine two array np . vstack (( x . T , y . T )) . T OOP \u00b6 Static method vs class method \u00b6 Static method can be used before class init. Recommend Project File Structure \u00b6 projectName projectName assets database.db static mystyle.css rule.js templates layout.html common io.py setting.py componentName module1.py module2.py module3.py tools.py componentName module1.py module2.py module3.py tools.py main.py tests test_main.py test_components_module1.py run.py otherAction.py readme.md Script main.py is script for refered, not not for run. Script under every components is mutually independant.The common part should saved under common folder. Folder assets is Used to save various data. Distribution \u00b6 Debug \u00b6 Microsoft Visual C++ 14.0 is required \u00b6 visit https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml and download compiled package Croniter error when install Django \u00b6 Version 0.3.26 and 0.3.27 is not exists at croniter, modify version(like 0.3.28) at requirements.txt","title":"Python"},{"location":"language/python/#python","text":"","title":"Python"},{"location":"language/python/#install","text":"","title":"Install"},{"location":"language/python/#centos","text":"https://janikarhunen.fi/how-to-install-python-3-6-1-on-centos-7","title":"Centos"},{"location":"language/python/#ubuntu","text":"Use ppa (Personal Package Archive) sudo add-apt-repository ppa:deadsnakes/ppa sudo apt-get update sudo apt-get install python3.6","title":"Ubuntu"},{"location":"language/python/#install-the-necessary-libraries","text":"pip: https://pip.pypa.io/en/stable/installing/ Virtualenv: pip install virtualenv","title":"Install the necessary libraries"},{"location":"language/python/#admin","text":"","title":"Admin"},{"location":"language/python/#package-install","text":"Pip from image source(Tempoary setting) pip install -I https://pypi.douban.com/simple/ Pip from image source(Persistence setting): edit $HOME/.pip/pip.conf(Unix) or %HOME%\\pip\\pip.ini(Windows) add [global] timeout = 6000 index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com","title":"Package install"},{"location":"language/python/#virtualenv","text":"Create virtualenv with specified version virtualenv env -p /usr/bin/python3.7","title":"Virtualenv"},{"location":"language/python/#path","text":"Alias python name alias python=python3.7 This command can't run use sudo , because it is a user level command.","title":"Path"},{"location":"language/python/#code-sample","text":"Get current script location scriptLocation = os . path . dirname ( os . path . realpath ( __file__ )) Get current local datetime time_str = time . strftime ( '%Y-%m- %d %H%m%S' , time . localtime ()) Export xlsx without url format with pd . ExcelWriter ( filepath , engine = 'xlsxwriter' , options = { 'strings_to_urls' : False }) as writer : df . to_excel ( writer , index = False ) Save excel-readabel csv with utf-8 resultFilepath = \"result.csv\" with open ( resultFilepath , mode = \"w\" , encoding = \"utf-8\" ) as f : f . write ( ' \\ufeff ' ) result . to_csv ( f , index = False , line_terminator = ' \\n ' ) Sort by a list [ x for _ , x in sorted ( zip ( Y , X ))] Quickly understand the information redundancy of pandas dataframe { x : df [ x ] . duplicated () . sum () / df . shape [ 0 ] for x in df . columns } Vertical Cmobine two array np . vstack (( x . T , y . T )) . T","title":"Code Sample"},{"location":"language/python/#oop","text":"","title":"OOP"},{"location":"language/python/#static-method-vs-class-method","text":"Static method can be used before class init.","title":"Static method vs class method"},{"location":"language/python/#recommend-project-file-structure","text":"projectName projectName assets database.db static mystyle.css rule.js templates layout.html common io.py setting.py componentName module1.py module2.py module3.py tools.py componentName module1.py module2.py module3.py tools.py main.py tests test_main.py test_components_module1.py run.py otherAction.py readme.md Script main.py is script for refered, not not for run. Script under every components is mutually independant.The common part should saved under common folder. Folder assets is Used to save various data.","title":"Recommend Project File Structure"},{"location":"language/python/#distribution","text":"","title":"Distribution"},{"location":"language/python/#debug","text":"","title":"Debug"},{"location":"language/python/#microsoft-visual-c-140-is-required","text":"visit https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml and download compiled package","title":"Microsoft Visual C++ 14.0 is required"},{"location":"language/python/#croniter-error-when-install-django","text":"Version 0.3.26 and 0.3.27 is not exists at croniter, modify version(like 0.3.28) at requirements.txt","title":"Croniter error when install Django"},{"location":"language/sql/","text":"SQL \u00b6 Code sample \u00b6 Create table CREATE TABLE tablex ( field1 varchar ( 20 ), field2 char ( 1 )); Create index CREATE INDEX index_name ON tablex ( field1 ); Delete index ALTER TABLE tablex DROP INDEX index_name Insert rows INSERT INTO tablex VALUES ( \"xx\" , \"1\" ); Update values UPDATE TABLE tablex SET field1 = \"\" WHERE field2 = \"m\" ; Delete rows DELETE FROM tablex WHERE field2 = \"m\" ; Delete table DROP TABLE tablex ; Debug \u00b6 Diffrence between union and union all \u00b6 The union will delete duplicate rows but union all not. Referral \u00b6 Impala SQL Spark SQL Pyspark.sql PostgreSQL SQLServer2017 SQlite SQL core functions MySQL","title":"SQL"},{"location":"language/sql/#sql","text":"","title":"SQL"},{"location":"language/sql/#code-sample","text":"Create table CREATE TABLE tablex ( field1 varchar ( 20 ), field2 char ( 1 )); Create index CREATE INDEX index_name ON tablex ( field1 ); Delete index ALTER TABLE tablex DROP INDEX index_name Insert rows INSERT INTO tablex VALUES ( \"xx\" , \"1\" ); Update values UPDATE TABLE tablex SET field1 = \"\" WHERE field2 = \"m\" ; Delete rows DELETE FROM tablex WHERE field2 = \"m\" ; Delete table DROP TABLE tablex ;","title":"Code sample"},{"location":"language/sql/#debug","text":"","title":"Debug"},{"location":"language/sql/#diffrence-between-union-and-union-all","text":"The union will delete duplicate rows but union all not.","title":"Diffrence between union and union all"},{"location":"language/sql/#referral","text":"Impala SQL Spark SQL Pyspark.sql PostgreSQL SQLServer2017 SQlite SQL core functions MySQL","title":"Referral"},{"location":"language/unix_commnads_bash/","text":"Unix Commands & Bash \u00b6 Unix Commands \u00b6 Samples \u00b6 Remove files under folder rm -rf /path/to/directory/* Count the number of files ls wc -l IP test curl ifconfig.me Search process by keyword ps -ef | grep {keyword} Search file by keyword ls {folder path} | grep {keyword} Search log info by keyword cat {log file path} | grep {keyword} Libraries \u00b6 Memory view: atop Kill process by keyword: pkill -f supervisord Referral \u00b6 Basic UNIX commands Bash \u00b6 Bash scripting cheatsheet User management \u00b6 Referral \u00b6 Ubuntu File Permissions Ubuntu User Management Useful commands \u00b6 Modify permission of file: chmod u+x filePath Add user to group: sudo adduser username groupname Check all user: cat /etc/passwd Change all file permission under directory: chown -R username:group directory Crontab \u00b6 Config crontab \u00b6 User level: crontab -e Global level: sudo nano /etc/crontab referr link Sample: */1 * * * * root /root/projects/anirec/start_anirec.sh Check crontab log \u00b6 centos sudo tail /var/log/cron ubuntu grep CRON /var/log/syslog","title":"Unix Commands & Bash"},{"location":"language/unix_commnads_bash/#unix-commands-bash","text":"","title":"Unix Commands &amp; Bash"},{"location":"language/unix_commnads_bash/#unix-commands","text":"","title":"Unix Commands"},{"location":"language/unix_commnads_bash/#samples","text":"Remove files under folder rm -rf /path/to/directory/* Count the number of files ls wc -l IP test curl ifconfig.me Search process by keyword ps -ef | grep {keyword} Search file by keyword ls {folder path} | grep {keyword} Search log info by keyword cat {log file path} | grep {keyword}","title":"Samples"},{"location":"language/unix_commnads_bash/#libraries","text":"Memory view: atop Kill process by keyword: pkill -f supervisord","title":"Libraries"},{"location":"language/unix_commnads_bash/#referral","text":"Basic UNIX commands","title":"Referral"},{"location":"language/unix_commnads_bash/#bash","text":"Bash scripting cheatsheet","title":"Bash"},{"location":"language/unix_commnads_bash/#user-management","text":"","title":"User management"},{"location":"language/unix_commnads_bash/#referral_1","text":"Ubuntu File Permissions Ubuntu User Management","title":"Referral"},{"location":"language/unix_commnads_bash/#useful-commands","text":"Modify permission of file: chmod u+x filePath Add user to group: sudo adduser username groupname Check all user: cat /etc/passwd Change all file permission under directory: chown -R username:group directory","title":"Useful commands"},{"location":"language/unix_commnads_bash/#crontab","text":"","title":"Crontab"},{"location":"language/unix_commnads_bash/#config-crontab","text":"User level: crontab -e Global level: sudo nano /etc/crontab referr link Sample: */1 * * * * root /root/projects/anirec/start_anirec.sh","title":"Config crontab"},{"location":"language/unix_commnads_bash/#check-crontab-log","text":"centos sudo tail /var/log/cron ubuntu grep CRON /var/log/syslog","title":"Check crontab log"},{"location":"server/airflow/","text":"Airflow \u00b6 Install \u00b6 pip install apache-airflow Admin \u00b6 Start \u00b6 airflow webserver airflow scheduler Add new dag \u00b6 Create a DAG definition script under \"{AIRFLOW_HOME}/dags/\" Import Airflow: import airflow Set default_args Init DAG Create Task include or inherit the arguments task_id and owner (Optionally) use Jinja template create a flexible command in task Setting up Dependencies between tasks, reuslt in a DAG (Optionally) Testing Test static syntax: python {dag script filepath} Metadata Validation\uff1a airflow list_dags and airflow list_tasks {task name} Test special task: airflow test {dag name} {task name} {date, like 2015-06-01} (Optionally) Backfill\uff1a airflow backfill {dag name} -s {startDate, like 2015-06-01} -e {endDate, like 2015-06-07} (Optionally)Init Database: airflow initdb Debug \u00b6 No module named 'werkzeug.wrappers.json' \u00b6 pip install -U Flask==1.0.4 Referral \u00b6 Airflow Official Site","title":"Airflow"},{"location":"server/airflow/#airflow","text":"","title":"Airflow"},{"location":"server/airflow/#install","text":"pip install apache-airflow","title":"Install"},{"location":"server/airflow/#admin","text":"","title":"Admin"},{"location":"server/airflow/#start","text":"airflow webserver airflow scheduler","title":"Start"},{"location":"server/airflow/#add-new-dag","text":"Create a DAG definition script under \"{AIRFLOW_HOME}/dags/\" Import Airflow: import airflow Set default_args Init DAG Create Task include or inherit the arguments task_id and owner (Optionally) use Jinja template create a flexible command in task Setting up Dependencies between tasks, reuslt in a DAG (Optionally) Testing Test static syntax: python {dag script filepath} Metadata Validation\uff1a airflow list_dags and airflow list_tasks {task name} Test special task: airflow test {dag name} {task name} {date, like 2015-06-01} (Optionally) Backfill\uff1a airflow backfill {dag name} -s {startDate, like 2015-06-01} -e {endDate, like 2015-06-07} (Optionally)Init Database: airflow initdb","title":"Add new dag"},{"location":"server/airflow/#debug","text":"","title":"Debug"},{"location":"server/airflow/#no-module-named-werkzeugwrappersjson","text":"pip install -U Flask==1.0.4","title":"No module named 'werkzeug.wrappers.json'"},{"location":"server/airflow/#referral","text":"Airflow Official Site","title":"Referral"},{"location":"server/django/","text":"Django \u00b6 Install \u00b6 pip install django Admin \u00b6 Start new project \u00b6 django-admin startproject {site name} Start new app \u00b6 Create new app folder: python manage.py startapp {app name} {app path} Add app to setting.py : setting.installed_apps Create Model in models.py from django.db import models class User(models.Model): name = models.CharField(max_length=50, default=\"admin\") email = models.EmailField(max_length=50) Create view in views.py from django.http import JsonResponse, HttpResponse def hello(request): return HttpResponse(\"Hello\") Add route in urls.py from django.urls import path from newapp import views urlpatterns = [ path('newapp', views.hello), ] Add urls in global urls.py : from django.conf.urls import include, url urlpatterns = [ path('newapp', include('newapp.urls')), ] (Optionally) Add model to admin in admin.py from django.contrib import admin from newpp.models import User @admin.register(User) def UserAdmin(admin.ModelAdmin): pass Finished Change admin password \u00b6 python manage.py changepassword <user_name> Two different ways to add url \u00b6 Use include from django.conf.urls import include , url urlpatterns = [ path ( 'newapp' , include ( 'newapp.urls' )), ] Import module from django.conf.urls import include , url import newapp urlpatterns = [ path ( 'newapp' , newapp . urls ), ] Frequently used moudles \u00b6 Moduel Useage Sample django.db build model from django.db import models django.http build response from django.http import JsonResponse django.urls build route from django.urls import path django.core core modules from django.core import serializers django.contrib addon modules from django.contrib import admin django.shortcuts Convenient shortcut from django.shortcuts import render django.utils common tools from django.utils import timezone django.conf get django config from django.conf import settings django.apps get django app config from django.apps import AppConfig django.test build test from django.test import TestCase Models \u00b6 Init model \u00b6 Question(question_text=\"What's new?\",pub_date=timezone.now()) Query model \u00b6 Question.objects.get(pk=1) Question.objects.all() Question.objects.filter() Question.objects.raw({SQL}) Debugging model \u00b6 python manage.py shell Views \u00b6 Build response \u00b6 Html from django.shortcuts import render def hello ( request ) return render ( request , '{html page path}' , { data }) Json from django.http import HttpResponse def hello ( request ) return JsonResponse ({ data }) Others from django.http import HttpResponse def hello ( request ) return HttpResponse ( status = 201 ) Get request content \u00b6 GET: request.GET.dict() POST: request.POST.dict() PUT: from django.http import QueryDict;QueryDict(request.body) PATCH: same with put DELETE: same with put Test \u00b6 Build test script from django.test import TestCase class Test1(TestCase): def test_get(): result = self.client.get('user') Run test python manage.py test newapp Django Rest framework \u00b6 Install \u00b6 pip install rest_framework Create new API \u00b6 Create model as usual Serialize Model from newapp.models import User from rest_framework import serializers class UserSerializer(serializers.HyperlinkedModelSerializer): class Meta: User = User fields = ('username', 'email') Create API view from rest_framework import viewsets from newapp.models import User from newapp.serializers import UserSerializer class UserViewSet(viewsets.ModelViewSet): queryset = User.objects.all().order_by('-date_joined') serializer_class = UserSerializer Add urls from django.urls import include, path from rest_framework import routers from newapp import views router = routers.DefaultRouter() router.register('users', views.UserViewSet) Referral \u00b6 Django Document Django Rest framework quick start site","title":"Django"},{"location":"server/django/#django","text":"","title":"Django"},{"location":"server/django/#install","text":"pip install django","title":"Install"},{"location":"server/django/#admin","text":"","title":"Admin"},{"location":"server/django/#start-new-project","text":"django-admin startproject {site name}","title":"Start new project"},{"location":"server/django/#start-new-app","text":"Create new app folder: python manage.py startapp {app name} {app path} Add app to setting.py : setting.installed_apps Create Model in models.py from django.db import models class User(models.Model): name = models.CharField(max_length=50, default=\"admin\") email = models.EmailField(max_length=50) Create view in views.py from django.http import JsonResponse, HttpResponse def hello(request): return HttpResponse(\"Hello\") Add route in urls.py from django.urls import path from newapp import views urlpatterns = [ path('newapp', views.hello), ] Add urls in global urls.py : from django.conf.urls import include, url urlpatterns = [ path('newapp', include('newapp.urls')), ] (Optionally) Add model to admin in admin.py from django.contrib import admin from newpp.models import User @admin.register(User) def UserAdmin(admin.ModelAdmin): pass Finished","title":"Start new app"},{"location":"server/django/#change-admin-password","text":"python manage.py changepassword <user_name>","title":"Change admin password"},{"location":"server/django/#two-different-ways-to-add-url","text":"Use include from django.conf.urls import include , url urlpatterns = [ path ( 'newapp' , include ( 'newapp.urls' )), ] Import module from django.conf.urls import include , url import newapp urlpatterns = [ path ( 'newapp' , newapp . urls ), ]","title":"Two different ways to add url"},{"location":"server/django/#frequently-used-moudles","text":"Moduel Useage Sample django.db build model from django.db import models django.http build response from django.http import JsonResponse django.urls build route from django.urls import path django.core core modules from django.core import serializers django.contrib addon modules from django.contrib import admin django.shortcuts Convenient shortcut from django.shortcuts import render django.utils common tools from django.utils import timezone django.conf get django config from django.conf import settings django.apps get django app config from django.apps import AppConfig django.test build test from django.test import TestCase","title":"Frequently used moudles"},{"location":"server/django/#models","text":"","title":"Models"},{"location":"server/django/#init-model","text":"Question(question_text=\"What's new?\",pub_date=timezone.now())","title":"Init model"},{"location":"server/django/#query-model","text":"Question.objects.get(pk=1) Question.objects.all() Question.objects.filter() Question.objects.raw({SQL})","title":"Query model"},{"location":"server/django/#debugging-model","text":"python manage.py shell","title":"Debugging model"},{"location":"server/django/#views","text":"","title":"Views"},{"location":"server/django/#build-response","text":"Html from django.shortcuts import render def hello ( request ) return render ( request , '{html page path}' , { data }) Json from django.http import HttpResponse def hello ( request ) return JsonResponse ({ data }) Others from django.http import HttpResponse def hello ( request ) return HttpResponse ( status = 201 )","title":"Build response"},{"location":"server/django/#get-request-content","text":"GET: request.GET.dict() POST: request.POST.dict() PUT: from django.http import QueryDict;QueryDict(request.body) PATCH: same with put DELETE: same with put","title":"Get request content"},{"location":"server/django/#test","text":"Build test script from django.test import TestCase class Test1(TestCase): def test_get(): result = self.client.get('user') Run test python manage.py test newapp","title":"Test"},{"location":"server/django/#django-rest-framework","text":"","title":"Django Rest framework"},{"location":"server/django/#install_1","text":"pip install rest_framework","title":"Install"},{"location":"server/django/#create-new-api","text":"Create model as usual Serialize Model from newapp.models import User from rest_framework import serializers class UserSerializer(serializers.HyperlinkedModelSerializer): class Meta: User = User fields = ('username', 'email') Create API view from rest_framework import viewsets from newapp.models import User from newapp.serializers import UserSerializer class UserViewSet(viewsets.ModelViewSet): queryset = User.objects.all().order_by('-date_joined') serializer_class = UserSerializer Add urls from django.urls import include, path from rest_framework import routers from newapp import views router = routers.DefaultRouter() router.register('users', views.UserViewSet)","title":"Create new API"},{"location":"server/django/#referral","text":"Django Document Django Rest framework quick start site","title":"Referral"},{"location":"server/mkdocs/","text":"Mkdocs \u00b6 mkdocs mkdocs-material","title":"Mkdocs"},{"location":"server/mkdocs/#mkdocs","text":"mkdocs mkdocs-material","title":"Mkdocs"},{"location":"server/nginx/","text":"Nginx \u00b6 Install \u00b6 Install on Ubuntu sudo apt-get update sudo apt-get install nginx Version check nginx -v Admin \u00b6 Start server \u00b6 sudo /etc/init.d/nginx start # or sudo /usr/local/nginx/sbin/nginx # or sudo service nginx start # commands: stop, status, reload Test config \u00b6 sudo nginx -t View process \u00b6 ps -ef |grep nginx View logs \u00b6 ls /var/log/nginx/ Config \u00b6 Config file location \u00b6 /etc/nginx/nginx.conf /etc/nginx/sites-enabled/default Keywords \u00b6 listen: port to listen server_name: host or domin root: site root directory location: route index Config sample \u00b6 Static website server server { listen 80; server_name 10.10.10.10; root /{app_root_directory}/; index index.html; } Dynamic website server server { listen 80 ; server_name 10 .10.10.10 ; location / { proxy_pass { dynamic server url } ; # sample: proxy_pass http://127.0.0.1:5500 } } Add static resource location /static/ { root /{app_static_directory}/; } Debug \u00b6 403 Error \u00b6 Maybe file permission problem, increase Nginx permsision or set user at nginx.conf, or decrease target files permission. Referral \u00b6 Nginx Offcial Document","title":"Nginx"},{"location":"server/nginx/#nginx","text":"","title":"Nginx"},{"location":"server/nginx/#install","text":"Install on Ubuntu sudo apt-get update sudo apt-get install nginx Version check nginx -v","title":"Install"},{"location":"server/nginx/#admin","text":"","title":"Admin"},{"location":"server/nginx/#start-server","text":"sudo /etc/init.d/nginx start # or sudo /usr/local/nginx/sbin/nginx # or sudo service nginx start # commands: stop, status, reload","title":"Start server"},{"location":"server/nginx/#test-config","text":"sudo nginx -t","title":"Test config"},{"location":"server/nginx/#view-process","text":"ps -ef |grep nginx","title":"View process"},{"location":"server/nginx/#view-logs","text":"ls /var/log/nginx/","title":"View logs"},{"location":"server/nginx/#config","text":"","title":"Config"},{"location":"server/nginx/#config-file-location","text":"/etc/nginx/nginx.conf /etc/nginx/sites-enabled/default","title":"Config file location"},{"location":"server/nginx/#keywords","text":"listen: port to listen server_name: host or domin root: site root directory location: route index","title":"Keywords"},{"location":"server/nginx/#config-sample","text":"Static website server server { listen 80; server_name 10.10.10.10; root /{app_root_directory}/; index index.html; } Dynamic website server server { listen 80 ; server_name 10 .10.10.10 ; location / { proxy_pass { dynamic server url } ; # sample: proxy_pass http://127.0.0.1:5500 } } Add static resource location /static/ { root /{app_static_directory}/; }","title":"Config sample"},{"location":"server/nginx/#debug","text":"","title":"Debug"},{"location":"server/nginx/#403-error","text":"Maybe file permission problem, increase Nginx permsision or set user at nginx.conf, or decrease target files permission.","title":"403 Error"},{"location":"server/nginx/#referral","text":"Nginx Offcial Document","title":"Referral"},{"location":"server/scrapy/","text":"Scrapy \u00b6 Start spider \u00b6 scrapy startproject {spide name} Spider script sample: \u00b6 import scrapy from SpiderName.items import ItemModel class SpiderName ( scrapy . Spider ): name = \"SpiderName\" def start_requests ( self ): urls = [ \"url1\" , \"url2\" ] for url in urls : yield scrapy . Request ( url = url , callback = self . parse ) def parse ( self , response ): # response.css can query html page content # response.url can get request url data = response . css ({ pattern }) item = ItemModel ( data ) yield item Pipeline Sample \u00b6 import mysql.connector import configparser class OpentrendPipeline ( object ): def process_item ( self , item , spider ): print ( item ) return item class MysqlPipeline ( object ): def __init__ ( self ): pass def open_spider ( self , spider ): config = configparser . ConfigParser () config . read ( 'config.ini' ) self . conn = mysql . connector . connect ( host = config [ 'DATABASE' ][ \"host\" ], port = int ( config [ 'DATABASE' ][ \"port\" ]), user = config [ 'DATABASE' ][ \"user\" ], password = config [ 'DATABASE' ][ \"password\" ]) cur = self . conn . cursor () cur . execute ( \"CREATE DATABASE IF NOT EXISTS sea\" ) self . conn . commit () cur . execute ( TABLE_CREATE_SQL ) self . conn . commit () def close_spider ( self , spider ): self . conn . commit () self . conn . close () def process_item ( self , item , spider ): addRow = ( \"INSERT INTO sea.opentrend \" \"(name,language,description,total_star_count,fork_count,member_count,period_stars_count,period,created_dt) \" \"VALUES ( %(name)s , %(language)s , %(description)s , %(total_star_count)s , %(fork_count)s , %(member_count)s , %(period_stars_count)s , %(period)s , %(created_dt)s )\" ) cur = self . conn . cursor () cur . execute ( addRow , dict ( item ))","title":"Scrapy"},{"location":"server/scrapy/#scrapy","text":"","title":"Scrapy"},{"location":"server/scrapy/#start-spider","text":"scrapy startproject {spide name}","title":"Start spider"},{"location":"server/scrapy/#spider-script-sample","text":"import scrapy from SpiderName.items import ItemModel class SpiderName ( scrapy . Spider ): name = \"SpiderName\" def start_requests ( self ): urls = [ \"url1\" , \"url2\" ] for url in urls : yield scrapy . Request ( url = url , callback = self . parse ) def parse ( self , response ): # response.css can query html page content # response.url can get request url data = response . css ({ pattern }) item = ItemModel ( data ) yield item","title":"Spider script sample:"},{"location":"server/scrapy/#pipeline-sample","text":"import mysql.connector import configparser class OpentrendPipeline ( object ): def process_item ( self , item , spider ): print ( item ) return item class MysqlPipeline ( object ): def __init__ ( self ): pass def open_spider ( self , spider ): config = configparser . ConfigParser () config . read ( 'config.ini' ) self . conn = mysql . connector . connect ( host = config [ 'DATABASE' ][ \"host\" ], port = int ( config [ 'DATABASE' ][ \"port\" ]), user = config [ 'DATABASE' ][ \"user\" ], password = config [ 'DATABASE' ][ \"password\" ]) cur = self . conn . cursor () cur . execute ( \"CREATE DATABASE IF NOT EXISTS sea\" ) self . conn . commit () cur . execute ( TABLE_CREATE_SQL ) self . conn . commit () def close_spider ( self , spider ): self . conn . commit () self . conn . close () def process_item ( self , item , spider ): addRow = ( \"INSERT INTO sea.opentrend \" \"(name,language,description,total_star_count,fork_count,member_count,period_stars_count,period,created_dt) \" \"VALUES ( %(name)s , %(language)s , %(description)s , %(total_star_count)s , %(fork_count)s , %(member_count)s , %(period_stars_count)s , %(period)s , %(created_dt)s )\" ) cur = self . conn . cursor () cur . execute ( addRow , dict ( item ))","title":"Pipeline Sample"},{"location":"server/streamlit/","text":"Streamlit \u00b6 Setup \u00b6 import streamlit as st Featrues \u00b6 titel: st.title('{title}') side bar: multi select: st.sidebar.multiselect ratio: st.sidebar.radio text(support markdown, dataframe): st.write('{text}') plot chart: st.plotly_chart({fig})","title":"Streamlit"},{"location":"server/streamlit/#streamlit","text":"","title":"Streamlit"},{"location":"server/streamlit/#setup","text":"import streamlit as st","title":"Setup"},{"location":"server/streamlit/#featrues","text":"titel: st.title('{title}') side bar: multi select: st.sidebar.multiselect ratio: st.sidebar.radio text(support markdown, dataframe): st.write('{text}') plot chart: st.plotly_chart({fig})","title":"Featrues"},{"location":"server/supervisor/","text":"Supervisor \u00b6 Install \u00b6 pip install supervisor Admin \u00b6 Start \u00b6 # In config directory cd /etc/supervisor/ supervisord If start multiple supervisor task accidently, kill process find in ps -ef . Command tool \u00b6 # run supervisorctl # shutdown supervisorctl shutdown Config \u00b6 File location: /etc/supervisor/supervisord.conf Config Sample [ supervisord ] [ supervisorctl ] [ program:foo ] command = /root/projects/servertest/env/bin/python /root/projects/servertest/manage.py runserver Debug \u00b6 Execute faild \u00b6 Permission related","title":"Supervisor"},{"location":"server/supervisor/#supervisor","text":"","title":"Supervisor"},{"location":"server/supervisor/#install","text":"pip install supervisor","title":"Install"},{"location":"server/supervisor/#admin","text":"","title":"Admin"},{"location":"server/supervisor/#start","text":"# In config directory cd /etc/supervisor/ supervisord If start multiple supervisor task accidently, kill process find in ps -ef .","title":"Start"},{"location":"server/supervisor/#command-tool","text":"# run supervisorctl # shutdown supervisorctl shutdown","title":"Command tool"},{"location":"server/supervisor/#config","text":"File location: /etc/supervisor/supervisord.conf Config Sample [ supervisord ] [ supervisorctl ] [ program:foo ] command = /root/projects/servertest/env/bin/python /root/projects/servertest/manage.py runserver","title":"Config"},{"location":"server/supervisor/#debug","text":"","title":"Debug"},{"location":"server/supervisor/#execute-faild","text":"Permission related","title":"Execute faild"}]}